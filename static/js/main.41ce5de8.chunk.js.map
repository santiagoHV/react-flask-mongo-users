{"version":3,"sources":["components/About.js","components/Users.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["About","API","Users","useEffect","getUsers","useState","name","setName","email","setEmail","password","setPassword","id","setId","users","setUsers","editing","setEditing","a","fetch","response","json","data","handleSubmit","e","link","preventDefault","method","headers","body","JSON","stringify","console","log","deleteUser","userId","window","confirm","editUser","className","onSubmit","type","onChange","target","value","placeholder","autoFocus","map","user","onClick","_id","NavbarComponent","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41ce5de8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const About = () => (\r\n    <div>\r\n        <h1>About</h1>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ratione praesentium expedita doloribus quo quia ab nisi beatae nemo, iure cumque corporis consectetur ut, dicta veniam nam. Sed impedit repellendus corrupti.</p>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Labore possimus, deserunt ut cumque ratione iure blanditiis delectus vel magnam est, quo, distinctio illo nemo! Corrupti, repellendus non. Mollitia, totam similique!</p>\r\n    </div>\r\n    \r\n)","import React, {useState, useEffect} from 'react';\r\n\r\nconst API = 'https://flaskbasicapi.herokuapp.com'//process.env.REACT_APP_API\r\n\r\nexport const Users = () => {\r\n\r\n    useEffect(() => { //constructor hooks\r\n        getUsers()\r\n    },[])\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [id, setId] = useState('')\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    const getUsers = async () => {\r\n        const response = await fetch(`${API}/users`)\r\n        const data = await response.json()\r\n        setUsers(data)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        const link = !editing ? `${API}/users` : `${API}/user/${id}`\r\n\r\n        e.preventDefault() //crea un ajax y no recarga la pagina\r\n\r\n        const response = await fetch(link,{\r\n            method: !editing ? 'POST' : 'PUT',\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            })\r\n        })\r\n\r\n        if(editing){\r\n            setEditing(false)\r\n            setId('')\r\n        }\r\n\r\n        const data = await response.json()\r\n        console.log(data)\r\n\r\n        await getUsers()\r\n\r\n        setPassword('')\r\n        setName('')\r\n        setEmail('')\r\n\r\n    }\r\n\r\n    const deleteUser = async (userId) => {\r\n        const userResponse = window.confirm('Are tou sure you want to delet it?')\r\n\r\n        if(userResponse){\r\n            const response = await fetch(\r\n                `${API}/user/${userId}`,\r\n                {method: 'DELETE'}\r\n            )\r\n            const data = await response.json();\r\n            console.log(data);\r\n\r\n            await getUsers()\r\n        }\r\n\r\n    }\r\n    \r\n    const editUser = async (userId) => {\r\n        const response = await fetch(`${API}/user/${userId}`)\r\n        const data = await response.json()\r\n\r\n        setEditing(true)\r\n\r\n        setName(data.name)\r\n        setEmail(data.email)\r\n        setPassword(data.password)\r\n        setId(userId)\r\n    }\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <form onSubmit={handleSubmit} className=\"card card-body\">\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" \r\n                            onChange={e => setName(e.target.value)} \r\n                            value={name} \r\n                            className=\"form-control\" \r\n                            placeholder=\"Name\" \r\n                            autoFocus/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" \r\n                            onChange={e => setEmail(e.target.value)} \r\n                            value={email} \r\n                            className=\"form-control\" \r\n                            placeholder=\"email\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" \r\n                            onChange={e => setPassword(e.target.value)} \r\n                            value={password} \r\n                            className=\"form-control\" \r\n                            placeholder=\"Password\"/>\r\n                    </div>\r\n                    <button className=\"btn btn-primary btn-block\">\r\n                        {editing ? 'Edit' : 'Create'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                Name\r\n                            </th>\r\n                            <th>\r\n                                Email\r\n                            </th>\r\n                            <th>\r\n                                Password\r\n                            </th>\r\n                            <th>\r\n                                Operations\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>\r\n                                   {user.name} \r\n                                </td>\r\n                                <td>\r\n                                   {user.email}\r\n                                </td>\r\n                                <td>\r\n                                   {user.password}\r\n                                </td>\r\n                                <td>\r\n                                    <button \r\n                                        className=\"btn btn-secondary btn-sm btn-block\"\r\n                                        onClick={e => editUser(user._id)}>\r\n                                        Edit\r\n                                    </button>\r\n                                    <button \r\n                                        className=\"btn btn-danger btn-sm btn-block\"\r\n                                        onClick={e => deleteUser(user._id)} >\r\n                                        Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const NavbarComponent = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">Flask React CRUD</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">Home</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n)","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {About} from './components/About'\nimport {Users} from './components/Users'\nimport {NavbarComponent} from './components/NavBar'\nfunction App() {\n  return (\n    <Router>\n      <NavbarComponent />\n      <div className=\"container p-2\">\n        <Switch>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/\" component={Users}/>\n        </Switch>\n      </div>\n\n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootswatch/dist/darkly/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}